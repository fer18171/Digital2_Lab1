

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 04:20:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0007                     _PORTC	set	7
   205  0008                     _PORTDbits	set	8
   206  0008                     _PORTD	set	8
   207  0007                     _PORTCbits	set	7
   208  0005                     _PORTAbits	set	5
   209  0049                     _RE1	set	73
   210  0048                     _RE0	set	72
   211  0089                     _TRISEbits	set	137
   212  0085                     _TRISAbits	set	133
   213  0087                     _TRISC	set	135
   214  0088                     _TRISD	set	136
   215  0189                     _ANSELH	set	393
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	cinit
   219  07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07FC                     __initialization:
   223  07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226  07FC                     __end_of__initialization:
   227  07FC  0183               	clrf	3
   228  07FD  120A  118A  2F7C   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:
   232  0070                     ?_setup:
   233  0070                     ??_setup:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_StartSecuence:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ??_StartSecuence:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_avanceJ1:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ??_avanceJ1:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_avanceJ2:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ??_avanceJ2:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0070                     	ds	11
   260  007B                     ??_main:
   261                           
   262                           ; 1 bytes @ 0xB
   263  007B                     	ds	3
   264                           
   265                           	psect	maintext
   266  077C                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 68 in file "JuegoDeCarreras.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0
   288 ;;      Temps:          3       0       0       0       0
   289 ;;      Totals:         3       0       0       0       0
   290 ;;Total ram usage:        3 bytes
   291 ;; Hardware stack levels required when called:    1
   292 ;; This function calls:
   293 ;;		_StartSecuence
   294 ;;		_avanceJ1
   295 ;;		_avanceJ2
   296 ;;		_setup
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _main
   304  077C                     _main:
   305  077C                     l719:	
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   308                           
   309                           
   310                           ;JuegoDeCarreras.c: 69:     setup();
   311  077C  120A  118A  26CB  120A  118A  	fcall	_setup
   312  0781                     l721:
   313                           
   314                           ;JuegoDeCarreras.c: 71:         if (PORTAbits.RA3 == 1) {
   315  0781  1283               	bcf	3,5	;RP0=0, select bank0
   316  0782  1303               	bcf	3,6	;RP1=0, select bank0
   317  0783  1D85               	btfss	5,3	;volatile
   318  0784  2F86               	goto	u31
   319  0785  2F87               	goto	u30
   320  0786                     u31:
   321  0786  2F8C               	goto	l725
   322  0787                     u30:
   323  0787                     l723:
   324                           
   325                           ;JuegoDeCarreras.c: 72:             StartSecuence();
   326  0787  120A  118A  26E5  120A  118A  	fcall	_StartSecuence
   327  078C                     l725:
   328                           
   329                           ;JuegoDeCarreras.c: 74:         if (PORTAbits.RA0 == 1 & PORTAbits.RA4 == 1) {
   330  078C  3001               	movlw	1
   331  078D  1283               	bcf	3,5	;RP0=0, select bank0
   332  078E  1303               	bcf	3,6	;RP1=0, select bank0
   333  078F  1C05               	btfss	5,0	;volatile
   334  0790  3900               	andlw	0
   335  0791  1E05               	btfss	5,4	;volatile
   336  0792  3900               	andlw	0
   337  0793  3800               	iorlw	0
   338  0794  1903               	skipnz
   339  0795  2F97               	goto	u41
   340  0796  2F98               	goto	u40
   341  0797                     u41:
   342  0797  2FAA               	goto	l731
   343  0798                     u40:
   344  0798                     l727:
   345                           
   346                           ;JuegoDeCarreras.c: 75:             avanceJ1();
   347  0798  120A  118A  2710  120A  118A  	fcall	_avanceJ1
   348  079D                     l729:
   349                           
   350                           ;JuegoDeCarreras.c: 76:             _delay((unsigned long)((500)*(8000000/4000.0)));
   351  079D  3006               	movlw	6
   352  079E  00FD               	movwf	??_main+2
   353  079F  3013               	movlw	19
   354  07A0  00FC               	movwf	??_main+1
   355  07A1  30AD               	movlw	173
   356  07A2  00FB               	movwf	??_main
   357  07A3                     u87:
   358  07A3  0BFB               	decfsz	??_main,f
   359  07A4  2FA3               	goto	u87
   360  07A5  0BFC               	decfsz	??_main+1,f
   361  07A6  2FA3               	goto	u87
   362  07A7  0BFD               	decfsz	??_main+2,f
   363  07A8  2FA3               	goto	u87
   364  07A9  2FAA               	nop2
   365  07AA                     l731:
   366                           
   367                           ;JuegoDeCarreras.c: 79:         if (PORTAbits.RA0 == 1 & PORTAbits.RA5 == 1) {
   368  07AA  3001               	movlw	1
   369  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   370  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   371  07AD  1C05               	btfss	5,0	;volatile
   372  07AE  3900               	andlw	0
   373  07AF  1E85               	btfss	5,5	;volatile
   374  07B0  3900               	andlw	0
   375  07B1  3800               	iorlw	0
   376  07B2  1903               	skipnz
   377  07B3  2FB5               	goto	u51
   378  07B4  2FB6               	goto	u50
   379  07B5                     u51:
   380  07B5  2FC8               	goto	l737
   381  07B6                     u50:
   382  07B6                     l733:
   383                           
   384                           ;JuegoDeCarreras.c: 80:             avanceJ2();
   385  07B6  120A  118A  2746  120A  118A  	fcall	_avanceJ2
   386  07BB                     l735:
   387                           
   388                           ;JuegoDeCarreras.c: 81:             _delay((unsigned long)((500)*(8000000/4000.0)));
   389  07BB  3006               	movlw	6
   390  07BC  00FD               	movwf	??_main+2
   391  07BD  3013               	movlw	19
   392  07BE  00FC               	movwf	??_main+1
   393  07BF  30AD               	movlw	173
   394  07C0  00FB               	movwf	??_main
   395  07C1                     u97:
   396  07C1  0BFB               	decfsz	??_main,f
   397  07C2  2FC1               	goto	u97
   398  07C3  0BFC               	decfsz	??_main+1,f
   399  07C4  2FC1               	goto	u97
   400  07C5  0BFD               	decfsz	??_main+2,f
   401  07C6  2FC1               	goto	u97
   402  07C7  2FC8               	nop2
   403  07C8                     l737:
   404                           
   405                           ;JuegoDeCarreras.c: 83:         if (PORTCbits.RC7==1){
   406  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   407  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   408  07CA  1F87               	btfss	7,7	;volatile
   409  07CB  2FCD               	goto	u61
   410  07CC  2FCE               	goto	u60
   411  07CD                     u61:
   412  07CD  2FE1               	goto	l749
   413  07CE                     u60:
   414  07CE                     l739:
   415                           
   416                           ;JuegoDeCarreras.c: 84:             _delay((unsigned long)((300)*(8000000/4000.0)));
   417  07CE  3004               	movlw	4
   418  07CF  00FD               	movwf	??_main+2
   419  07D0  300C               	movlw	12
   420  07D1  00FC               	movwf	??_main+1
   421  07D2  3033               	movlw	51
   422  07D3  00FB               	movwf	??_main
   423  07D4                     u107:
   424  07D4  0BFB               	decfsz	??_main,f
   425  07D5  2FD4               	goto	u107
   426  07D6  0BFC               	decfsz	??_main+1,f
   427  07D7  2FD4               	goto	u107
   428  07D8  0BFD               	decfsz	??_main+2,f
   429  07D9  2FD4               	goto	u107
   430  07DA  2FDB               	nop2
   431  07DB                     l741:
   432                           
   433                           ;JuegoDeCarreras.c: 85:             PORTCbits.RC7=0;
   434  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   435  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   436  07DD  1387               	bcf	7,7	;volatile
   437  07DE                     l743:
   438                           
   439                           ;JuegoDeCarreras.c: 86:             PORTD = 0;
   440  07DE  0188               	clrf	8	;volatile
   441  07DF                     l745:
   442                           
   443                           ;JuegoDeCarreras.c: 87:             RE0 = 1;
   444  07DF  1409               	bsf	9,0	;volatile
   445  07E0                     l747:
   446                           
   447                           ;JuegoDeCarreras.c: 88:             PORTAbits.RA0 = 0;
   448  07E0  1005               	bcf	5,0	;volatile
   449  07E1                     l749:
   450                           
   451                           ;JuegoDeCarreras.c: 90:         if (PORTDbits.RD7==1){
   452  07E1  1F88               	btfss	8,7	;volatile
   453  07E2  2FE4               	goto	u71
   454  07E3  2FE5               	goto	u70
   455  07E4                     u71:
   456  07E4  2F81               	goto	l721
   457  07E5                     u70:
   458  07E5                     l751:
   459                           
   460                           ;JuegoDeCarreras.c: 91:             _delay((unsigned long)((300)*(8000000/4000.0)));
   461  07E5  3004               	movlw	4
   462  07E6  00FD               	movwf	??_main+2
   463  07E7  300C               	movlw	12
   464  07E8  00FC               	movwf	??_main+1
   465  07E9  3033               	movlw	51
   466  07EA  00FB               	movwf	??_main
   467  07EB                     u117:
   468  07EB  0BFB               	decfsz	??_main,f
   469  07EC  2FEB               	goto	u117
   470  07ED  0BFC               	decfsz	??_main+1,f
   471  07EE  2FEB               	goto	u117
   472  07EF  0BFD               	decfsz	??_main+2,f
   473  07F0  2FEB               	goto	u117
   474  07F1  2FF2               	nop2
   475  07F2                     l753:
   476                           
   477                           ;JuegoDeCarreras.c: 92:             PORTDbits.RD7=0;
   478  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   479  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   480  07F4  1388               	bcf	8,7	;volatile
   481  07F5                     l755:
   482                           
   483                           ;JuegoDeCarreras.c: 93:             PORTC = 0;
   484  07F5  0187               	clrf	7	;volatile
   485  07F6                     l757:
   486                           
   487                           ;JuegoDeCarreras.c: 94:             RE1 = 1;
   488  07F6  1489               	bsf	9,1	;volatile
   489  07F7                     l759:
   490                           
   491                           ;JuegoDeCarreras.c: 95:             PORTAbits.RA0 = 0;
   492  07F7  1005               	bcf	5,0	;volatile
   493  07F8  2F81               	goto	l721
   494  07F9  120A  118A  2800   	ljmp	start
   495  07FC                     __end_of_main:
   496                           
   497                           	psect	text1
   498  06CB                     __ptext1:	
   499 ;; *************** function _setup *****************
   500 ;; Defined at:
   501 ;;		line 106 in file "JuegoDeCarreras.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		status,2
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0
   518 ;;      Totals:         0       0       0       0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _setup
   530  06CB                     _setup:
   531  06CB                     l657:	
   532                           ;incstack = 0
   533                           ; Regs used in _setup: [status,2]
   534                           
   535                           
   536                           ;JuegoDeCarreras.c: 107:     ANSEL = 0;
   537  06CB  1683               	bsf	3,5	;RP0=1, select bank3
   538  06CC  1703               	bsf	3,6	;RP1=1, select bank3
   539  06CD  0188               	clrf	8	;volatile
   540                           
   541                           ;JuegoDeCarreras.c: 108:     ANSELH = 0;
   542  06CE  0189               	clrf	9	;volatile
   543                           
   544                           ;JuegoDeCarreras.c: 109:     TRISD = 0;
   545  06CF  1683               	bsf	3,5	;RP0=1, select bank1
   546  06D0  1303               	bcf	3,6	;RP1=0, select bank1
   547  06D1  0188               	clrf	8	;volatile
   548                           
   549                           ;JuegoDeCarreras.c: 110:     TRISC = 0;
   550  06D2  0187               	clrf	7	;volatile
   551  06D3                     l659:
   552                           
   553                           ;JuegoDeCarreras.c: 111:     TRISAbits.TRISA0 = 0;
   554  06D3  1005               	bcf	5,0	;volatile
   555  06D4                     l661:
   556                           
   557                           ;JuegoDeCarreras.c: 112:     TRISAbits.TRISA1 = 0;
   558  06D4  1085               	bcf	5,1	;volatile
   559  06D5                     l663:
   560                           
   561                           ;JuegoDeCarreras.c: 113:     TRISAbits.TRISA2 = 0;
   562  06D5  1105               	bcf	5,2	;volatile
   563  06D6                     l665:
   564                           
   565                           ;JuegoDeCarreras.c: 114:     TRISAbits.TRISA3 = 1;
   566  06D6  1585               	bsf	5,3	;volatile
   567  06D7                     l667:
   568                           
   569                           ;JuegoDeCarreras.c: 115:     TRISAbits.TRISA4 = 1;
   570  06D7  1605               	bsf	5,4	;volatile
   571  06D8                     l669:
   572                           
   573                           ;JuegoDeCarreras.c: 116:     TRISAbits.TRISA5 = 1;
   574  06D8  1685               	bsf	5,5	;volatile
   575  06D9                     l671:
   576                           
   577                           ;JuegoDeCarreras.c: 117:     TRISEbits.TRISE0= 0;
   578  06D9  1009               	bcf	9,0	;volatile
   579  06DA                     l673:
   580                           
   581                           ;JuegoDeCarreras.c: 118:     TRISEbits.TRISE1= 0;
   582  06DA  1089               	bcf	9,1	;volatile
   583  06DB                     l675:
   584                           
   585                           ;JuegoDeCarreras.c: 119:     RE0 = 0;
   586  06DB  1283               	bcf	3,5	;RP0=0, select bank0
   587  06DC  1303               	bcf	3,6	;RP1=0, select bank0
   588  06DD  1009               	bcf	9,0	;volatile
   589  06DE                     l677:
   590                           
   591                           ;JuegoDeCarreras.c: 120:     RE1 = 0;
   592  06DE  1089               	bcf	9,1	;volatile
   593                           
   594                           ;JuegoDeCarreras.c: 121:     PORTD = 0;
   595  06DF  0188               	clrf	8	;volatile
   596                           
   597                           ;JuegoDeCarreras.c: 122:     PORTC = 0;
   598  06E0  0187               	clrf	7	;volatile
   599  06E1                     l679:
   600                           
   601                           ;JuegoDeCarreras.c: 123:     PORTAbits.RA2 = 0;
   602  06E1  1105               	bcf	5,2	;volatile
   603  06E2                     l681:
   604                           
   605                           ;JuegoDeCarreras.c: 124:     PORTAbits.RA0 = 0;
   606  06E2  1005               	bcf	5,0	;volatile
   607  06E3                     l683:
   608                           
   609                           ;JuegoDeCarreras.c: 125:     PORTAbits.RA1 = 0;
   610  06E3  1085               	bcf	5,1	;volatile
   611  06E4                     l52:
   612  06E4  0008               	return
   613  06E5                     __end_of_setup:
   614                           
   615                           	psect	text2
   616  0746                     __ptext2:	
   617 ;; *************** function _avanceJ2 *****************
   618 ;; Defined at:
   619 ;;		line 152 in file "JuegoDeCarreras.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:         11       0       0       0       0
   636 ;;      Totals:        11       0       0       0       0
   637 ;;Total ram usage:       11 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _avanceJ2
   648  0746                     _avanceJ2:
   649  0746                     l713:	
   650                           ;incstack = 0
   651                           ; Regs used in _avanceJ2: [wreg+status,2+status,0]
   652                           
   653                           
   654                           ;JuegoDeCarreras.c: 153:     if ((PORTDbits.RD0 | PORTDbits.RD1 | PORTDbits.RD2 | PORTDb
      +                          its.RD3 | PORTDbits.RD4 | PORTDbits.RD5 | PORTDbits.RD6 | PORTDbits.RD7) == 0)
   655  0746  1283               	bcf	3,5	;RP0=0, select bank0
   656  0747  1303               	bcf	3,6	;RP1=0, select bank0
   657  0748  0D08               	rlf	8,w	;volatile
   658  0749  0D08               	rlf	8,w	;volatile
   659  074A  3901               	andlw	1
   660  074B  00F0               	movwf	??_avanceJ2
   661  074C  0E08               	swapf	8,w	;volatile
   662  074D  00F1               	movwf	??_avanceJ2+1
   663  074E  0CF1               	rrf	??_avanceJ2+1,f
   664  074F  0C71               	rrf	??_avanceJ2+1,w
   665  0750  3901               	andlw	1
   666  0751  00F2               	movwf	??_avanceJ2+2
   667  0752  0E08               	swapf	8,w	;volatile
   668  0753  00F3               	movwf	??_avanceJ2+3
   669  0754  0C73               	rrf	??_avanceJ2+3,w
   670  0755  3901               	andlw	1
   671  0756  00F4               	movwf	??_avanceJ2+4
   672  0757  0E08               	swapf	8,w	;volatile
   673  0758  3901               	andlw	1
   674  0759  00F5               	movwf	??_avanceJ2+5
   675  075A  0C08               	rrf	8,w	;volatile
   676  075B  00F6               	movwf	??_avanceJ2+6
   677  075C  0CF6               	rrf	??_avanceJ2+6,f
   678  075D  0C76               	rrf	??_avanceJ2+6,w
   679  075E  3901               	andlw	1
   680  075F  00F7               	movwf	??_avanceJ2+7
   681  0760  0C08               	rrf	8,w	;volatile
   682  0761  00F8               	movwf	??_avanceJ2+8
   683  0762  0C78               	rrf	??_avanceJ2+8,w
   684  0763  3901               	andlw	1
   685  0764  00F9               	movwf	??_avanceJ2+9
   686  0765  0C08               	rrf	8,w	;volatile
   687  0766  3901               	andlw	1
   688  0767  00FA               	movwf	??_avanceJ2+10
   689  0768  0808               	movf	8,w	;volatile
   690  0769  3901               	andlw	1
   691  076A  047A               	iorwf	??_avanceJ2+10,w
   692  076B  0479               	iorwf	??_avanceJ2+9,w
   693  076C  0477               	iorwf	??_avanceJ2+7,w
   694  076D  0475               	iorwf	??_avanceJ2+5,w
   695  076E  0474               	iorwf	??_avanceJ2+4,w
   696  076F  0472               	iorwf	??_avanceJ2+2,w
   697  0770  0470               	iorwf	??_avanceJ2,w
   698  0771  1D03               	btfss	3,2
   699  0772  2F74               	goto	u21
   700  0773  2F75               	goto	u20
   701  0774                     u21:
   702  0774  2F77               	goto	l717
   703  0775                     u20:
   704  0775                     l715:
   705                           
   706                           ;JuegoDeCarreras.c: 154:         PORTDbits.RD0 = 1;
   707  0775  1408               	bsf	8,0	;volatile
   708  0776  2F7B               	goto	l65
   709  0777                     l717:
   710                           
   711                           ;JuegoDeCarreras.c: 156:         PORTD = PORTD << 1;
   712  0777  0808               	movf	8,w	;volatile
   713  0778  00F0               	movwf	??_avanceJ2
   714  0779  0770               	addwf	??_avanceJ2,w
   715  077A  0088               	movwf	8	;volatile
   716  077B                     l65:
   717  077B  0008               	return
   718  077C                     __end_of_avanceJ2:
   719                           
   720                           	psect	text3
   721  0710                     __ptext3:	
   722 ;; *************** function _avanceJ1 *****************
   723 ;; Defined at:
   724 ;;		line 145 in file "JuegoDeCarreras.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0
   740 ;;      Temps:         11       0       0       0       0
   741 ;;      Totals:        11       0       0       0       0
   742 ;;Total ram usage:       11 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _avanceJ1
   753  0710                     _avanceJ1:
   754  0710                     l707:	
   755                           ;incstack = 0
   756                           ; Regs used in _avanceJ1: [wreg+status,2+status,0]
   757                           
   758                           
   759                           ;JuegoDeCarreras.c: 146:     if ((PORTCbits.RC0 | PORTCbits.RC1 | PORTCbits.RC2 | PORTCb
      +                          its.RC3 | PORTCbits.RC4 | PORTCbits.RC5 | PORTCbits.RC6 | PORTCbits.RC7) == 0)
   760  0710  1283               	bcf	3,5	;RP0=0, select bank0
   761  0711  1303               	bcf	3,6	;RP1=0, select bank0
   762  0712  0D07               	rlf	7,w	;volatile
   763  0713  0D07               	rlf	7,w	;volatile
   764  0714  3901               	andlw	1
   765  0715  00F0               	movwf	??_avanceJ1
   766  0716  0E07               	swapf	7,w	;volatile
   767  0717  00F1               	movwf	??_avanceJ1+1
   768  0718  0CF1               	rrf	??_avanceJ1+1,f
   769  0719  0C71               	rrf	??_avanceJ1+1,w
   770  071A  3901               	andlw	1
   771  071B  00F2               	movwf	??_avanceJ1+2
   772  071C  0E07               	swapf	7,w	;volatile
   773  071D  00F3               	movwf	??_avanceJ1+3
   774  071E  0C73               	rrf	??_avanceJ1+3,w
   775  071F  3901               	andlw	1
   776  0720  00F4               	movwf	??_avanceJ1+4
   777  0721  0E07               	swapf	7,w	;volatile
   778  0722  3901               	andlw	1
   779  0723  00F5               	movwf	??_avanceJ1+5
   780  0724  0C07               	rrf	7,w	;volatile
   781  0725  00F6               	movwf	??_avanceJ1+6
   782  0726  0CF6               	rrf	??_avanceJ1+6,f
   783  0727  0C76               	rrf	??_avanceJ1+6,w
   784  0728  3901               	andlw	1
   785  0729  00F7               	movwf	??_avanceJ1+7
   786  072A  0C07               	rrf	7,w	;volatile
   787  072B  00F8               	movwf	??_avanceJ1+8
   788  072C  0C78               	rrf	??_avanceJ1+8,w
   789  072D  3901               	andlw	1
   790  072E  00F9               	movwf	??_avanceJ1+9
   791  072F  0C07               	rrf	7,w	;volatile
   792  0730  3901               	andlw	1
   793  0731  00FA               	movwf	??_avanceJ1+10
   794  0732  0807               	movf	7,w	;volatile
   795  0733  3901               	andlw	1
   796  0734  047A               	iorwf	??_avanceJ1+10,w
   797  0735  0479               	iorwf	??_avanceJ1+9,w
   798  0736  0477               	iorwf	??_avanceJ1+7,w
   799  0737  0475               	iorwf	??_avanceJ1+5,w
   800  0738  0474               	iorwf	??_avanceJ1+4,w
   801  0739  0472               	iorwf	??_avanceJ1+2,w
   802  073A  0470               	iorwf	??_avanceJ1,w
   803  073B  1D03               	btfss	3,2
   804  073C  2F3E               	goto	u11
   805  073D  2F3F               	goto	u10
   806  073E                     u11:
   807  073E  2F41               	goto	l711
   808  073F                     u10:
   809  073F                     l709:
   810                           
   811                           ;JuegoDeCarreras.c: 147:         PORTCbits.RC0 = 1;
   812  073F  1407               	bsf	7,0	;volatile
   813  0740  2F45               	goto	l60
   814  0741                     l711:
   815                           
   816                           ;JuegoDeCarreras.c: 149:         PORTC = PORTC << 1;
   817  0741  0807               	movf	7,w	;volatile
   818  0742  00F0               	movwf	??_avanceJ1
   819  0743  0770               	addwf	??_avanceJ1,w
   820  0744  0087               	movwf	7	;volatile
   821  0745                     l60:
   822  0745  0008               	return
   823  0746                     __end_of_avanceJ1:
   824                           
   825                           	psect	text4
   826  06E5                     __ptext4:	
   827 ;; *************** function _StartSecuence *****************
   828 ;; Defined at:
   829 ;;		line 130 in file "JuegoDeCarreras.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0
   845 ;;      Temps:          3       0       0       0       0
   846 ;;      Totals:         3       0       0       0       0
   847 ;;Total ram usage:        3 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _StartSecuence
   858  06E5                     _StartSecuence:
   859  06E5                     l685:	
   860                           ;incstack = 0
   861                           ; Regs used in _StartSecuence: [wreg+status,2]
   862                           
   863                           
   864                           ;JuegoDeCarreras.c: 131:     PORTD = 0;
   865  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   866  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   867  06E7  0188               	clrf	8	;volatile
   868                           
   869                           ;JuegoDeCarreras.c: 132:     PORTC = 0;
   870  06E8  0187               	clrf	7	;volatile
   871  06E9                     l687:
   872                           
   873                           ;JuegoDeCarreras.c: 133:     RE0 = 0;
   874  06E9  1009               	bcf	9,0	;volatile
   875  06EA                     l689:
   876                           
   877                           ;JuegoDeCarreras.c: 134:     RE1 = 0;
   878  06EA  1089               	bcf	9,1	;volatile
   879  06EB                     l691:
   880                           
   881                           ;JuegoDeCarreras.c: 135:     PORTAbits.RA2 = 1;
   882  06EB  1505               	bsf	5,2	;volatile
   883  06EC                     l693:
   884                           
   885                           ;JuegoDeCarreras.c: 136:     PORTAbits.RA0 = 0;
   886  06EC  1005               	bcf	5,0	;volatile
   887  06ED                     l695:
   888                           
   889                           ;JuegoDeCarreras.c: 137:     _delay((unsigned long)((600)*(8000000/4000.0)));
   890  06ED  3007               	movlw	7
   891  06EE  00F2               	movwf	??_StartSecuence+2
   892  06EF  3017               	movlw	23
   893  06F0  00F1               	movwf	??_StartSecuence+1
   894  06F1  306A               	movlw	106
   895  06F2  00F0               	movwf	??_StartSecuence
   896  06F3                     u127:
   897  06F3  0BF0               	decfsz	??_StartSecuence,f
   898  06F4  2EF3               	goto	u127
   899  06F5  0BF1               	decfsz	??_StartSecuence+1,f
   900  06F6  2EF3               	goto	u127
   901  06F7  0BF2               	decfsz	??_StartSecuence+2,f
   902  06F8  2EF3               	goto	u127
   903  06F9  0000               	nop
   904  06FA                     l697:
   905                           
   906                           ;JuegoDeCarreras.c: 138:     PORTAbits.RA2 = 0;
   907  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   908  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   909  06FC  1105               	bcf	5,2	;volatile
   910  06FD                     l699:
   911                           
   912                           ;JuegoDeCarreras.c: 139:     PORTAbits.RA1 = 1;
   913  06FD  1485               	bsf	5,1	;volatile
   914  06FE                     l701:
   915                           
   916                           ;JuegoDeCarreras.c: 140:     _delay((unsigned long)((600)*(8000000/4000.0)));
   917  06FE  3007               	movlw	7
   918  06FF  00F2               	movwf	??_StartSecuence+2
   919  0700  3017               	movlw	23
   920  0701  00F1               	movwf	??_StartSecuence+1
   921  0702  306A               	movlw	106
   922  0703  00F0               	movwf	??_StartSecuence
   923  0704                     u137:
   924  0704  0BF0               	decfsz	??_StartSecuence,f
   925  0705  2F04               	goto	u137
   926  0706  0BF1               	decfsz	??_StartSecuence+1,f
   927  0707  2F04               	goto	u137
   928  0708  0BF2               	decfsz	??_StartSecuence+2,f
   929  0709  2F04               	goto	u137
   930  070A  0000               	nop
   931  070B                     l703:
   932                           
   933                           ;JuegoDeCarreras.c: 141:     PORTAbits.RA1 = 0;
   934  070B  1283               	bcf	3,5	;RP0=0, select bank0
   935  070C  1303               	bcf	3,6	;RP1=0, select bank0
   936  070D  1085               	bcf	5,1	;volatile
   937  070E                     l705:
   938                           
   939                           ;JuegoDeCarreras.c: 142:     PORTAbits.RA0 = 1;
   940  070E  1405               	bsf	5,0	;volatile
   941  070F                     l55:
   942  070F  0008               	return
   943  0710                     __end_of_StartSecuence:
   944  007E                     btemp	set	126	;btemp
   945  007E                     wtemp0	set	126
   946                           
   947                           	psect	config
   948                           
   949                           ;Config register CONFIG1 @ 0x2007
   950                           ;	Oscillator Selection bits
   951                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   952                           ;	Watchdog Timer Enable bit
   953                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   954                           ;	Power-up Timer Enable bit
   955                           ;	PWRTE = OFF, PWRT disabled
   956                           ;	RE3/MCLR pin function select bit
   957                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   958                           ;	Code Protection bit
   959                           ;	CP = OFF, Program memory code protection is disabled
   960                           ;	Data Code Protection bit
   961                           ;	CPD = OFF, Data memory code protection is disabled
   962                           ;	Brown Out Reset Selection bits
   963                           ;	BOREN = OFF, BOR disabled
   964                           ;	Internal External Switchover bit
   965                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   966                           ;	Fail-Safe Clock Monitor Enabled bit
   967                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   968                           ;	Low Voltage Programming Enable bit
   969                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   970                           ;	In-Circuit Debugger Mode bit
   971                           ;	DEBUG = 0x1, unprogrammed default
   972  2007                     	org	8199
   973  2007  20F1               	dw	8433
   974                           
   975                           ;Config register CONFIG2 @ 0x2008
   976                           ;	Brown-out Reset Selection bit
   977                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   978                           ;	Flash Program Memory Self Write Enable bits
   979                           ;	WRT = OFF, Write protection off
   980  2008                     	org	8200
   981  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_avanceJ1
    _main->_avanceJ2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                             11 COMMON     3     3      0
                      _StartSecuence
                           _avanceJ1
                           _avanceJ2
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _avanceJ2                                            11    11      0       0
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _avanceJ1                                            11    11      0       0
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _StartSecuence                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _StartSecuence
   _avanceJ1
   _avanceJ2
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 04:20:23 2021

                     l60 0745                       l52 06E4                       l55 070F  
                     l65 077B                       u10 073F                       u11 073E  
                     u20 0775                       u21 0774                       u30 0787  
                     u31 0786                       u40 0798                       u41 0797  
                     u50 07B6                       u51 07B5                       u60 07CE  
                     u61 07CD                       u70 07E5                       u71 07E4  
                     u87 07A3                       u97 07C1                      l701 06FE  
                    l703 070B                      l711 0741                      l705 070E  
                    l713 0746                      l721 0781                      l707 0710  
                    l715 0775                      l731 07AA                      l723 0787  
                    l709 073F                      l717 0777                      l661 06D4  
                    l741 07DB                      l733 07B6                      l725 078C  
                    l671 06D9                      l663 06D5                      l751 07E5  
                    l743 07DE                      l735 07BB                      l727 0798  
                    l719 077C                      l681 06E2                      l673 06DA  
                    l665 06D6                      l657 06CB                      l753 07F2  
                    l745 07DF                      l737 07C8                      l729 079D  
                    l691 06EB                      l683 06E3                      l675 06DB  
                    l667 06D7                      l659 06D3                      l755 07F5  
                    l747 07E0                      l739 07CE                      l693 06EC  
                    l685 06E5                      l677 06DE                      l669 06D8  
                    l757 07F6                      l749 07E1                      l695 06ED  
                    l687 06E9                      l679 06E1                      l759 07F7  
                    l697 06FA                      l689 06EA                      l699 06FD  
                    _RE0 0048                      _RE1 0049                      u107 07D4  
                    u117 07EB                      u127 06F3                      u137 0704  
                   _main 077C                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188          ??_StartSecuence 0070  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _setup 06CB                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 007B                   ?_setup 0070                   _ANSELH 0189  
       __end_of_avanceJ1 0746         __end_of_avanceJ2 077C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 06E5                  ??_setup 0070  
             __pmaintext 077C                ?_avanceJ1 0070                ?_avanceJ2 0070  
                __ptext1 06CB                  __ptext2 0746                  __ptext3 0710  
                __ptext4 06E5    __end_of_StartSecuence 0710               ??_avanceJ1 0070  
             ??_avanceJ2 0070     end_of_initialization 07FC                _PORTAbits 0005  
              _PORTCbits 0007                _PORTDbits 0008                _TRISAbits 0085  
              _TRISEbits 0089      start_initialization 07FC                ___latbits 0002  
      __size_of_avanceJ1 0036        __size_of_avanceJ2 0036           __size_of_setup 001A  
 __size_of_StartSecuence 002B                 _avanceJ1 0710                 _avanceJ2 0746  
          __size_of_main 0080            _StartSecuence 06E5           ?_StartSecuence 0070  
